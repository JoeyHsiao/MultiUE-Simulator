#!/bin/sh

run_script ()
{
    run_times_tmp=$(cat /xq3_execute_config | grep testing_times=)
    stop_once_disconnect_tmp=$(cat /xq3_execute_config | grep stop_once_disconnect=)

    if [ -z "$run_times_tmp" ]; then
        run_times=0
    else
        run_times=$(echo "$run_times_tmp" | cut -d'=' -f 2)
    fi

    if [ "$run_times" -eq 0 ]; then
        while true; do
            . /xq3_execute.sh

            killall iperf3 lftp axel curl ping
            sleep 5

            if [ "$stop_once_disconnect_tmp" = "False" ]; then
                continue
            elif [ "$(cat /var/xq3/net_ifstatus_state)" = "0" ]; then
                echo "network_disconnect" >> /xq3_logs_file;
                break
            fi
        done
    else
        for i in $(seq 1 $run_times); do
            . /xq3_execute.sh

            killall iperf3 lftp axel curl ping
            sleep 5

            if [ "$(cat /var/xq3/net_ifstatus_state)" = "0" ]; then
                echo "network_disconnect" >> /xq3_logs_file;
                if [ "$stop_once_disconnect_tmp" = "True" ]; then
                    break
                fi
            fi
        done
    fi
}

run_wo_daemon ()
{
    run_script
}

run_daemon ()
{
    run_script &
    daemon_pid=$!
    while true; do
        if kill -0 $daemon_pid 2>/dev/null; then
            break
        fi
    done
}

run ()
{
    swapoff -a
    sync
    swapon /dev/zram0

    mkdir /data/xq3

    if [ ! -z "$(cat /xq3_execute_config | grep daemon | grep True)" ]; then
        run_script &
        daemon_pid=$!

        while true; do
            if ! kill -0 $daemon_pid 2>/dev/null; then
                echo "finish"
                break
            fi
        done
    else
        run_script
    fi
}

stop()
{
    kill -9 $(ps | grep "xq3_testing run" | grep -v grep | awk '{print $1}')
    killall iperf3 lftp axel curl ping
}

status()
{
    if [ ! -z "$(ps | grep "xq3_testing run" | grep -v grep)" ]; then
        echo "running"
    else
        echo "stop"
    fi
}

result()
{
    if [ -z "$(ps | grep xq3_execute | grep -v grep)" ]; then
        echo "====== Testing not start ======"
        exit
    fi

    if [ ! -f "/xq3_logs_file" ]; then
        echo "====== Logs file disappear ======"
        exit
    fi

    log_name=$(cat /xq3_logs_file | tail -n 1)

    if [ ! -f "/data/xq3/$log_name" ]; then
        echo "====== Readonly system ======"
    else
        cat /data/xq3/$log_name | tail -n 10
    fi
    
}

info()
{
    if [ -f /xq3_execute_config ]; then
        test_type=$(cat /xq3_execute_config | grep "type=" | awk -F '=' '{print $2}' | sed 's/\r$//' | tr -d ' ')
        test_port=$(cat /xq3_execute_config | grep "port=" | awk -F '=' '{print $2}' | sed 's/\r$//' | tr -d ' ')

        if [ -z "$test_port" ]; then
            echo "ping"
            exit
        fi

        echo "${test_type}_${test_port}"
    fi
}

collect_logs()
{
    first_log="$(cat /xq3_logs_file | head -n 1)"
    if [ ! -z "$(echo $first_log | grep ping)" ]; then
        result_log_name="result_ping_"$(echo $first_log | awk -F '_' '{print $NF}' | sed 's/\r$//' | tr -d ' ')

        for line in $(cat /xq3_logs_file); do
            cat /data/xq3/$line | grep "64 bytes" >> /data/xq3/$result_log_name
        done
    elif [ ! -z "$(echo $first_log | grep iperf)" ]; then
        result_log_name="result_iperf3_"$(echo $first_log | awk -F '_' '{print $2"_"$3}' | sed 's/\r$//' | tr -d ' ')"_"$(echo $first_log | awk -F '_' '{print $NF}' | sed 's/\r$//' | tr -d ' ')

        for line in $(cat /xq3_logs_file); do
            if [ ! -z "$(cat /data/xq3/$line)" ]; then
                cat /data/xq3/$line | grep "sec" >> /data/xq3/$result_log_name
            fi
        done
    fi
}

$1